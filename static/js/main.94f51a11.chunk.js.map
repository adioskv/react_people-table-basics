{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Header/Header.tsx","App.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PeopleLink/PeopleLink.tsx","api.ts","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","index.tsx"],"names":["Navigation","className","isActive","classNames","to","Header","role","App","HomePage","useParams","path","replace","Loader","PeopleLink","person","slug","name","sex","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","useState","isLoading","setIsLoading","peoples","setPeoples","error","setError","selectedSlug","initialLoad","useEffect","length","map","born","died","motherName","fatherName","father","find","human","mother","PeoplePage","createRoot","document","getElementById","render","element","index"],"mappings":"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","file":"static/js/main.94f51a11.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => (\n  <div className=\"container\">\n    <div className=\"navbar-brand\">\n      <NavLink\n        className={\n          ({ isActive }) => classNames(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )\n        }\n        to=\"/\"\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        className={\n          ({ isActive }) => classNames(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )\n        }\n        to=\"/people\"\n      >\n        People\n      </NavLink>\n    </div>\n  </div>\n);\n","import { Navigation } from '../Navigation/Navigation';\n\nexport const Header = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <Navigation />\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Header } from './components/Header/Header';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Header />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { Navigate, useParams } from 'react-router-dom';\n\nexport const HomePage = () => {\n  const { path } = useParams();\n\n  if (path === 'home') {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person\n}\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    name,\n    sex,\n  } = person;\n\n  return (\n    <Link\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n      to={slug}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleLink } from '../PeopleLink/PeopleLink';\nimport { getPeople } from '../../api';\n\nexport const PeopleTable = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [peoples, setPeoples] = useState<Person[] | []>([]);\n  const [error, setError] = useState(false);\n\n  const { selectedSlug } = useParams();\n\n  const initialLoad = async () => {\n    setIsLoading(true);\n    try {\n      setPeoples(await getPeople());\n    } catch (e) {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    initialLoad();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading\n          ? <Loader />\n          : (\n            <>\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!peoples.length\n                ? (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )\n                : (\n                  <table\n                    data-cy=\"peopleTable\"\n                    className={classNames(\n                      'table',\n                      'is-striped',\n                      'is-hoverable',\n                      'is-narrow',\n                      'is-fullwidth',\n                    )}\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {peoples.map(person => {\n                        const {\n                          sex,\n                          born,\n                          died,\n                          motherName,\n                          fatherName,\n                          slug,\n                        } = person;\n\n                        const father: Person | undefined = peoples.find(\n                          human => human.name === fatherName,\n                        );\n\n                        const mother: Person | undefined = peoples.find(\n                          human => human.name === motherName,\n                        );\n\n                        return (\n                          <tr\n                            key={slug}\n                            data-cy=\"person\"\n                            className={classNames(\n                              {\n                                'has-background-warning': slug === selectedSlug,\n                              },\n                            )}\n                          >\n                            <td>\n                              <PeopleLink person={person} />\n                            </td>\n\n                            <td>{sex}</td>\n                            <td>{born}</td>\n                            <td>{died}</td>\n                            <td>\n                              {mother\n                                ? <PeopleLink person={mother as Person} />\n                                : motherName || '-'}\n                            </td>\n                            <td>\n                              {father\n                                ? <PeopleLink person={father as Person} />\n                                : fatherName || '-'}\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                )}\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n","import { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => (\n  <>\n    <h1 className=\"title\">People Page</h1>\n\n    <PeopleTable />\n  </>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/:path?\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":selectedSlug?\" element={<PeoplePage />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}