{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Header/Header.tsx","App.tsx","pages/HomePage/HomePage.tsx","components/PeopleLink/PeopleLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","pages/PeoplePage/PeoplePage.tsx","index.tsx"],"names":["Navigation","getClassNames","isActive","classNames","className","to","Header","role","App","HomePage","PeopleLink","person","slug","name","sex","PeopleTable","people","selectedSlug","useParams","findHuman","useCallback","humanName","find","human","map","born","died","motherName","fatherName","father","mother","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","isLoading","setIsLoading","setPeople","error","setError","useEffect","initialLoad","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"oQAGaA,EAAa,WACxB,IAAMC,EAAgB,SAACC,GAAD,OAAuBC,IAC3C,cACA,CAAE,8BAA+BD,GAFb,EAKtB,OACE,qBAAKE,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGF,EAAH,EAAGA,SAAH,OAAkBD,EAAcC,EAAhC,EACXG,GAAG,IAFL,kBAOA,cAAC,IAAD,CACED,UAAW,gBAAGF,EAAH,EAAGA,SAAH,OAAkBD,EAAcC,EAAhC,EACXG,GAAG,UAFL,wBASP,EC1BYC,EAAS,kBACpB,qBACE,UAAQ,MACRF,UAAU,iCACVG,KAAK,aACL,aAAW,kBAJb,SAME,cAAC,EAAD,KAPkB,ECETC,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IACA,sBAAMJ,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAKT,ECfYK,EAAW,WACtB,OACE,oBAAIL,UAAU,QAAd,sBAEH,E,4BCKYM,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE1CC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACAC,EACEH,EADFG,IAGF,OACE,cAAC,IAAD,CACEV,UAAWD,IACT,CAAE,kBAA2B,MAARW,IAEvBT,GAAE,kBAAaO,GAJjB,SAMGC,GAGN,ECpBYE,EAA8C,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpDC,EAAiBC,cAAjBD,aAEFE,EAAYC,uBAAY,SAACC,GAC7B,OAAOL,EAAOM,MACZ,SAAAC,GAAK,OAAIA,EAAMV,OAASQ,CAAnB,GAER,GAAE,CAACL,IAEJ,OACE,wBACE,UAAQ,cACRZ,UAAWD,IACT,QACA,aACA,eACA,YACA,gBAPJ,UAUE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGa,EAAOQ,KAAI,SAAAb,GACV,IACEG,EAMEH,EANFG,IACAW,EAKEd,EALFc,KACAC,EAIEf,EAJFe,KACAC,EAGEhB,EAHFgB,WACAC,EAEEjB,EAFFiB,WACAhB,EACED,EADFC,KAGIiB,EAASV,EAAUS,GACnBE,EAASX,EAAUQ,GAEzB,OACE,qBAEE,UAAQ,SACRvB,UAAWD,IACT,CACE,yBAA0BS,IAASK,IALzC,UASE,6BACE,cAAC,EAAD,CAAYN,OAAQA,MAGtB,6BAAKG,IACL,6BAAKW,IACL,6BAAKC,IACL,6BACGI,EACG,cAAC,EAAD,CAAYnB,OAAQmB,IACpBH,GAAc,MAEpB,6BACGE,EACG,cAAC,EAAD,CAAYlB,OAAQkB,IACpBD,GAAc,QAvBfhB,EA2BV,QAIR,EC3EM,SAASmB,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKpC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECITqC,EAAa,WACxB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAwB,IAApD,mBAAO1B,EAAP,KAAe6B,EAAf,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,qBAAU,WACR,IAAMC,EAAW,iDAAG,6GAEhBJ,EAFgB,SAEAd,IAFA,kFAIhBgB,GAAS,GAJO,yBAMhBH,GAAa,GANG,4EAAH,qDAUjBK,GACD,GAAE,IAGD,qCACE,oBAAI7C,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SAEGuC,EACG,cAAC,EAAD,IAEA,qCACGG,GACC,mBAAG,UAAQ,qBAAqB1C,UAAU,kBAA1C,kCAKAY,EAAOkC,QAAWP,EAMhB,cAAC,EAAD,CAAa3B,OAAQA,IAJrB,mBAAG,UAAQ,kBAAX,wDAWnB,ECxCDmC,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUnD,GAAG,IAAIqD,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,qBAEd,cAAC,IAAD,CACEA,KAAK,IACLC,QACE,oBAAIpD,UAAU,QAAd,qC","file":"static/js/main.1a83e185.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  const getClassNames = (isActive: boolean) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => getClassNames(isActive)}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => getClassNames(isActive)}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n","import { Navigation } from '../Navigation/Navigation';\n\nexport const Header = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <Navigation />\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Header } from './components/Header/Header';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Header />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person\n}\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    name,\n    sex,\n  } = person;\n\n  return (\n    <Link\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { useCallback } from 'react';\nimport { Person } from '../../types';\nimport { PeopleLink } from '../PeopleLink/PeopleLink';\n\nexport const PeopleTable: React.FC<{ people: Person[] }> = ({ people }) => {\n  const { selectedSlug } = useParams();\n\n  const findHuman = useCallback((humanName: string | null) => {\n    return people.find(\n      human => human.name === humanName,\n    );\n  }, [people]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className={classNames(\n        'table',\n        'is-striped',\n        'is-hoverable',\n        'is-narrow',\n        'is-fullwidth',\n      )}\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            slug,\n          } = person;\n\n          const father = findHuman(fatherName);\n          const mother = findHuman(motherName);\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames(\n                {\n                  'has-background-warning': slug === selectedSlug,\n                },\n              )}\n            >\n              <td>\n                <PeopleLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? <PeopleLink person={mother as Person} />\n                  : motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? <PeopleLink person={father as Person} />\n                  : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { PeopleTable } from '../../components/PeopleTable/PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<Person[] | []>([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const initialLoad = async () => {\n      try {\n        setPeople(await getPeople());\n      } catch (e) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initialLoad();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                {error && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {!people.length && !isLoading\n                  ? (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )\n                  : <PeopleTable people={people} />}\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":selectedSlug?\" />\n          </Route>\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}